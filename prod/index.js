function doorAction(a,b){if(doors[a].cd<=0){var c=!1;switch(b){case"o":doors[a].st="c",c=!0;break;case"c":doors[a].st="o",c=!0;break;default:return"illegal request"}c&&(doors[a].cd=COOLDOWN_SECONDS)}}var COOLDOWN_SECONDS=10,doors={d1:{st:"o",cd:0},d2:{st:"o",cd:0},d3:{st:"o",cd:0},d4:{st:"o",cd:0},d5:{st:"o",cd:0},d6:{st:"o",cd:0},d7:{st:"o",cd:0},d8:{st:"o",cd:0},d9:{st:"o",cd:0},d10:{st:"o",cd:0},d11:{st:"o",cd:0},d12:{st:"o",cd:0},d13:{st:"o",cd:0},d14:{st:"o",cd:0}};setInterval(function(){for(i in doors)0==--doors[i].cd&&io.emit("door",JSON.stringify({id:i,data:doors[i]}))},1e3);var express=require("express"),app=express(),http=require("http").Server(app),io=require("socket.io")(http);app.use("/",express["static"]("public")),io.on("connection",function(a){console.log("new connection: "+a.id);var b=a.id;a.on("labirint_setup",function(a){console.log("labirint_setup: "+a),io.sockets.connected[b].emit("labirint_setup",JSON.stringify(doors))}),a.on("allDoors",function(a){io.sockets.connected[b].emit("allDoors",JSON.stringify(doors))}),a.on("disconnect",function(){console.log("user "+b+" disconnected")}),a.on("door",function(a){console.log("door: "+a);var b=JSON.parse(a),c=b.id,d=b.s,e=doorAction(c,d);void 0!==e&&console.log(e),io.emit("door",JSON.stringify({id:c,data:doors[c]}))})});var HTTP_PORT=3e3;http.listen(HTTP_PORT,function(){console.log("listening on: "+HTTP_PORT)});var PORT=11111,HOST="0.0.0.0",dgram=require("dgram"),server=dgram.createSocket("udp4");server.on("listening",function(){var a=server.address();console.log("UDP Server listening on "+a.address+":"+a.port)}),server.on("message",function(a,b){console.log(b.address+":"+b.port+" - "+a);var c=""+a,d=c.charCodeAt(0);console.log(d),server.send(a,0,a.length-1,b.port,b.address)}),server.bind(PORT,HOST);